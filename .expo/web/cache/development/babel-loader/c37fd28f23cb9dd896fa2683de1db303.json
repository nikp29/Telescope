{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _config = require(\"../firebase/config.js\");\n\nvar _navigationRef = require(\"../navigationRef\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/src/components/ProfileIcon.js\";\n\nvar t = true;\n\nvar ProfileIcon = function ProfileIcon(_ref) {\n  var uid = _ref.uid;\n\n  var defaultImage = require(\"../../assets/icons/user.png\");\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      uid_ = _useState2[0],\n      setUid = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(defaultImage),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      profilePic = _useState4[0],\n      setProfilePic = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(\"\"),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      username = _useState6[0],\n      setUsername = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var uid_async;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!uid) {\n                _context.next = 5;\n                break;\n              }\n\n              setUid(uid);\n              getImage(setProfilePic, uid);\n              _context.next = 10;\n              break;\n\n            case 5:\n              _context.next = 7;\n              return _regenerator.default.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 7:\n              uid_async = _context.sent;\n              setUid(uid_async);\n              getImage(setProfilePic, uid_async);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return _react.default.createElement(_TouchableOpacity.default, {\n    style: styles.container,\n    onPress: function onPress(event) {\n      return (0, _navigationRef.navigate)(\"ProfileView\", {\n        uid: uid_ ? uid_ : uid\n      });\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Image.default, {\n    style: {\n      width: 30,\n      height: 30\n    },\n    source: profilePic,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar getImage = function getImage(setProfilePic, uid) {\n  var imageURL, userRef, storageRef;\n  return _regenerator.default.async(function getImage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          imageURL = false;\n          userRef = _config.firebase.firestore().collection(\"users\");\n          storageRef = _config.firebase.storage().ref();\n\n          _config.firebase.firestore().collection(\"users\").doc(uid).get().then(function (doc) {\n            var data = doc.data();\n            imageURL = data.pic;\n          }).then(function () {\n            if (imageURL) {\n              storageRef.child(\"profile_pictures/\" + uid + \".jpg\").getDownloadURL().then(function (url) {\n                setProfilePic({\n                  uri: url\n                });\n              });\n            }\n          }).catch(function (error) {\n            console.error(\"Error fetching document: \", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#FFD770\",\n    flexDirection: \"row\",\n    overflow: \"hidden\",\n    width: 30,\n    height: 30\n  }\n});\n\nvar _default = ProfileIcon;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/components/ProfileIcon.js"],"names":["t","ProfileIcon","uid","defaultImage","require","uid_","setUid","profilePic","setProfilePic","username","setUsername","getImage","AsyncStorage","getItem","uid_async","styles","container","event","width","height","imageURL","userRef","firebase","firestore","collection","storageRef","storage","ref","doc","get","then","data","pic","child","getDownloadURL","url","uri","catch","error","console","StyleSheet","create","borderRadius","borderWidth","borderColor","flexDirection","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport { firebase } from \"../firebase/config.js\";\nimport { navigate } from \"../navigationRef\";\n\nvar t = true;\n\nconst ProfileIcon = ({ uid }) => {\n  const defaultImage = require(\"../../assets/icons/user.png\");\n\n  const [uid_, setUid] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(defaultImage);\n  const [username, setUsername] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      if (uid) {\n        setUid(uid);\n        getImage(setProfilePic, uid);\n      } else {\n        const uid_async = await AsyncStorage.getItem(\"token\");\n        setUid(uid_async);\n        getImage(setProfilePic, uid_async);\n      }\n    })();\n  }, []);\n  return (\n    <TouchableOpacity\n      style={styles.container}\n      onPress={(event) => navigate(\"ProfileView\", { uid: uid_ ? uid_ : uid })}\n    >\n      <Image style={{ width: 30, height: 30 }} source={profilePic} />\n    </TouchableOpacity>\n  );\n};\n\nconst getImage = async (setProfilePic, uid) => {\n  var imageURL = false;\n  const userRef = firebase.firestore().collection(\"users\");\n  var storageRef = firebase.storage().ref();\n  firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(uid)\n    .get()\n    .then((doc) => {\n      const data = doc.data();\n      imageURL = data.pic;\n    })\n    .then(() => {\n      if (imageURL) {\n        storageRef\n          .child(\"profile_pictures/\" + uid + \".jpg\")\n          .getDownloadURL()\n          .then((url) => {\n            setProfilePic({ uri: url });\n          });\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error fetching document: \", error);\n    });\n};\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 15,\n    borderWidth: 2,\n    borderColor: \"#FFD770\",\n    flexDirection: \"row\",\n    overflow: \"hidden\",\n    width: 30,\n    height: 30,\n  },\n});\n\nexport default ProfileIcon;\n"]},"metadata":{},"sourceType":"script"}