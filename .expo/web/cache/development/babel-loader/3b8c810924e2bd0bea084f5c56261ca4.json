{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AppLoadingNativeWrapper = _interopRequireDefault(require(\"./AppLoadingNativeWrapper\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AppLoading = function (_React$Component) {\n  (0, _inherits2.default)(AppLoading, _React$Component);\n\n  var _super = _createSuper(AppLoading);\n\n  function AppLoading() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AppLoading);\n    _this = _super.apply(this, arguments);\n    _this._isMounted = false;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AppLoading, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.startLoadingAppResourcesAsync().catch(function (error) {\n        console.error(\"AppLoading threw an unexpected error when loading:\\n\" + error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"startLoadingAppResourcesAsync\",\n    value: function startLoadingAppResourcesAsync() {\n      return _regenerator.default.async(function startLoadingAppResourcesAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if ('startAsync' in this.props) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if ('onFinish' in this.props) {\n                _context.next = 4;\n                break;\n              }\n\n              throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n\n            case 4:\n              if ('onError' in this.props) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error('AppLoading onError prop is required if startAsync is provided');\n\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return _regenerator.default.awrap(this.props.startAsync());\n\n            case 9:\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](6);\n\n              if (this._isMounted) {\n                _context.next = 15;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 15:\n              this.props.onError(_context.t0);\n\n            case 16:\n              _context.prev = 16;\n\n              if (this._isMounted) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              this.props.onFinish();\n              return _context.finish(16);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[6, 11, 16, 21]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_AppLoadingNativeWrapper.default, (0, _extends2.default)({}, this.props));\n    }\n  }]);\n  return AppLoading;\n}(_react.default.Component);\n\nexports.default = AppLoading;","map":{"version":3,"sources":["../src/AppLoading.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;IAwCqB,U;;;;;AAArB,wBAAA;AAAA;;AAAA;;AACE,UAAA,UAAA,GAAsB,KAAtB;AADF;AA+CC;;;;WA5CC,6BAAiB;AACf,WAAK,UAAL,GAAkB,IAAlB;AAEA,WAAK,6BAAL,GAAqC,KAArC,CAA2C,UAAA,KAAK,EAAG;AACjD,QAAA,OAAO,CAAC,KAAR,0DAAqE,KAArE;AACD,OAFD;AAGD;;;WAED,gCAAoB;AAClB,WAAK,UAAL,GAAkB,KAAlB;AACD;;;WAEO;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,gBAAgB,KAAK,KADrB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAKA,cAAc,KAAK,KALnB;AAAA;AAAA;AAAA;;AAAA,oBAME,IAAI,KAAJ,CAAU,gEAAV,CANF;;AAAA;AAAA,kBASA,aAAa,KAAK,KATlB;AAAA;AAAA;AAAA;;AAAA,oBAUE,IAAI,KAAJ,CAAU,+DAAV,CAVF;;AAAA;AAAA;AAAA;AAAA,gDAcE,KAAK,KAAL,CAAW,UAAX,EAdF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,kBAgBC,KAAK,UAhBN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAmBJ,mBAAK,KAAL,CAAW,OAAX;;AAnBI;AAAA;;AAAA,kBAqBC,KAAK,UArBN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAyBJ,mBAAK,KAAL,CAAW,QAAX;AAzBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WA6BR,kBAAM;AACJ,aAAO,eAAA,aAAA,CAAC,gCAAD,EAAiB,uBAAA,EAAA,EAAK,KAAK,KAAV,CAAjB,CAAP;AACD;;;EA9CqC,eAAM,S","sourcesContent":["import React from 'react';\n\nimport NativeAppLoading from './AppLoadingNativeWrapper';\n\ntype Props =\n  | {\n      /**\n       * Optional, you can do this process manually if you prefer.\n       * This is mainly for backwards compatibility and it is not recommended.\n       *\n       * When provided, requires providing `onError` prop as well.\n       * @deprecated\n       */\n      startAsync: () => Promise<void>;\n\n      /**\n       * If `startAsync` throws an error, it is caught and passed into the provided function.\n       * @deprecated\n       */\n      onError: (error: Error) => void;\n\n      /**\n       * Called when `startAsync` resolves or rejects.\n       * This should be used to set state and unmount the `AppLoading` component.\n       * @deprecated\n       */\n      onFinish: () => void;\n\n      /**\n       * Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\n       * Auto-hiding is enabled by default.\n       */\n      autoHideSplash?: boolean;\n    }\n  | {\n      /**\n       * Whether to hide the native splash screen as soon as you unmount the `AppLoading` component.\n       * Auto-hiding is enabled by default.\n       */\n      autoHideSplash?: boolean;\n    };\n\nexport default class AppLoading extends React.Component<Props> {\n  _isMounted: boolean = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    this.startLoadingAppResourcesAsync().catch(error => {\n      console.error(`AppLoading threw an unexpected error when loading:\\n${error}`);\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  private async startLoadingAppResourcesAsync() {\n    if (!('startAsync' in this.props)) {\n      return;\n    }\n\n    if (!('onFinish' in this.props)) {\n      throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n    }\n\n    if (!('onError' in this.props)) {\n      throw new Error('AppLoading onError prop is required if startAsync is provided');\n    }\n\n    try {\n      await this.props.startAsync();\n    } catch (e) {\n      if (!this._isMounted) {\n        return;\n      }\n      this.props.onError(e);\n    } finally {\n      if (!this._isMounted) {\n        return;\n      }\n      // If we get to this point then we know that either there was no error, or the error was handled.\n      this.props.onFinish();\n    }\n  }\n\n  render() {\n    return <NativeAppLoading {...this.props} />;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}