{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedSet = createAnimatedSet;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _val = require(\"../val\");\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AnimatedSet = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedSet, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedSet);\n\n  function AnimatedSet(what, value) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedSet);\n    (0, _invariant.default)(what instanceof _AnimatedNode2.default, \"Reanimated: Animated.set first argument should be of type AnimatedNode but got \".concat(what));\n    (0, _invariant.default)(value instanceof _AnimatedNode2.default, \"Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got \".concat(value));\n    _this = _super.call(this, {\n      type: 'set',\n      what: what,\n      value: value\n    }, [value]);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_what\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_value\", void 0);\n\n    (0, _invariant.default)(!what._constant, 'Value to be set cannot be constant');\n    _this._what = what;\n    _this._value = value;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedSet, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedSet, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var newValue = (0, _val.val)(this._value);\n\n      this._what.setValue(newValue);\n\n      return newValue;\n    }\n  }]);\n  return AnimatedSet;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedSet(what, value) {\n  return new AnimatedSet(what, (0, _AnimatedBlock.adapt)(value));\n}","map":{"version":3,"sources":["AnimatedSet.js"],"names":["constructor","invariant","what","value","type","toString","__onEvaluate","newValue","val","adapt"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;IAEA,W;;;;;AAIEA,uBAAW,IAAXA,EAAW,KAAXA,EAAyB;AAAA;;AAAA;AACvBC,4BACEC,IAAI,YADG,sBAATD,EAAS,kFAAA,MAAA,CAATA,IAAS,CAATA;AAIAA,4BACEE,KAAK,YADE,sBAATF,EAAS,qGAAA,MAAA,CAATA,KAAS,CAATA;AAIA,8BAAM;AAAEG,MAAAA,IAAI,EAAN,KAAA;AAAeF,MAAAA,IAAf,EAAeA,IAAf;AAAqBC,MAAAA,KAAAA,EAAAA;AAArB,KAAN,EAAoC,CAApC,KAAoC,CAApC;;AATuB,IAAA,eAAA,8CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,8CAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAUvBF,4BAAU,CAACC,IAAI,CAAN,SAATD,EAAAA,oCAAAA;AACA,UAAA,KAAA,GAAA,IAAA;AACA,UAAA,MAAA,GAAA,KAAA;AAZuB;AAaxB;;;;WAEDI,oBAAW;AACT,aAAA,oBAAA,MAAA,CAA2B,KAA3B,QAAA,CAAA;AACD;;;WAEDC,wBAAe;AACb,UAAMC,QAAQ,GAAGC,cAAI,KAArB,MAAiBA,CAAjB;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,QAAA;;AACA,aAAA,QAAA;AACD;;;EA3BH,sB;;AA8BO,SAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAwC;AAC7C,SAAO,IAAA,WAAA,CAAA,IAAA,EAAsBC,0BAA7B,KAA6BA,CAAtB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport invariant from 'fbjs/lib/invariant';\nimport { val } from '../val';\nimport { adapt } from '../core/AnimatedBlock';\n\nclass AnimatedSet extends AnimatedNode {\n  _what;\n  _value;\n\n  constructor(what, value) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: Animated.set first argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      value instanceof AnimatedNode,\n      `Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got ${value}`\n    );\n    super({ type: 'set', what, value }, [value]);\n    invariant(!what._constant, 'Value to be set cannot be constant');\n    this._what = what;\n    this._value = value;\n  }\n\n  toString() {\n    return `AnimatedSet, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const newValue = val(this._value);\n    this._what.setValue(newValue);\n    return newValue;\n  }\n}\n\nexport function createAnimatedSet(what, value) {\n  return new AnimatedSet(what, adapt(value));\n}\n"]},"metadata":{},"sourceType":"script"}