{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Context = exports.Provider = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _createDataContext2 = _interopRequireDefault(require(\"./createDataContext\"));\n\nvar _navigationRef = require(\"../navigationRef\");\n\nvar _config = require(\"../firebase/config.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar authReducer = function authReducer(state, action) {\n  switch (action.type) {\n    case \"add_error\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: action.payload\n      });\n\n    case \"signin\":\n      return {\n        errorMessage: \"\",\n        token: action.payload\n      };\n\n    case \"clear_error_message\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: \"\"\n      });\n\n    case \"signout\":\n      return {\n        token: null,\n        errorMessage: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar tryLocalSignin = function tryLocalSignin(dispatch) {\n  return function _callee() {\n    var token;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              dispatch({\n                type: \"signin\",\n                payload: token\n              });\n              (0, _navigationRef.navigate)(\"Today\");\n            } else {\n              (0, _navigationRef.navigate)(\"Signup\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar clearErrorMessage = function clearErrorMessage(dispatch) {\n  return function () {\n    dispatch({\n      type: \"clear_error_message\"\n    });\n  };\n};\n\nvar signup = function signup(dispatch) {\n  return function _callee2(_ref) {\n    var email, password, fullName;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref.email, password = _ref.password, fullName = _ref.fullName;\n\n            _config.firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var data = {\n                id: uid,\n                email: email,\n                fullName: fullName,\n                bio: \"\",\n                pic: false,\n                youtube: \"\",\n                instagram: \"\",\n                tiktok: \"\"\n              };\n\n              var usersRef = _config.firebase.firestore().collection(\"users\");\n\n              usersRef.doc(uid).set(data).then(function () {\n                _asyncStorage.default.setItem(\"token\", uid);\n\n                dispatch({\n                  type: \"signin\",\n                  payload: data\n                });\n                (0, _navigationRef.navigate)(\"Today\");\n              }).catch(function (error) {\n                dispatch({\n                  type: \"add_error\",\n                  payload: error.message\n                });\n              });\n            }).catch(function (error) {\n              dispatch({\n                type: \"add_error\",\n                payload: error.message\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar signin = function signin(dispatch) {\n  return function _callee3(_ref2) {\n    var email, password;\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n\n            _config.firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n\n              var usersRef = _config.firebase.firestore().collection(\"users\");\n\n              usersRef.doc(uid).get().then(function (firestoreDocument) {\n                if (!firestoreDocument.exists) {\n                  dispatch({\n                    type: \"add_error\",\n                    payload: \"User does not exist\"\n                  });\n                  return;\n                }\n\n                var data = firestoreDocument.data();\n                dispatch({\n                  type: \"signin\",\n                  payload: data\n                });\n\n                _asyncStorage.default.setItem(\"token\", uid);\n\n                (0, _navigationRef.navigate)(\"Today\");\n              }).catch(function (error) {\n                dispatch({\n                  type: \"add_error\",\n                  payload: error.message\n                });\n              });\n            }).catch(function (error) {\n              dispatch({\n                type: \"add_error\",\n                payload: error.message\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar signout = function signout(dispatch) {\n  return function _callee4() {\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.removeItem(\"token\"));\n\n          case 2:\n            dispatch({\n              type: \"signout\"\n            });\n            (0, _navigationRef.navigate)(\"loginFlow\");\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = (0, _createDataContext2.default)(authReducer, {\n  signin: signin,\n  signout: signout,\n  signup: signup,\n  clearErrorMessage: clearErrorMessage,\n  tryLocalSignin: tryLocalSignin\n}, {\n  token: null,\n  errorMessage: \"\"\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexports.Context = Context;\nexports.Provider = Provider;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/context/AuthContext.js"],"names":["authReducer","state","action","type","errorMessage","payload","token","tryLocalSignin","dispatch","AsyncStorage","getItem","clearErrorMessage","signup","email","password","fullName","firebase","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","bio","pic","youtube","instagram","tiktok","usersRef","firestore","collection","doc","set","setItem","catch","error","message","signin","signInWithEmailAndPassword","get","firestoreDocument","exists","signout","removeItem","Provider","Context"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\nimport createDataContext from \"./createDataContext\";\nimport { navigate } from \"../navigationRef\";\nimport { firebase } from \"../firebase/config.js\";\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case \"add_error\":\n      return { ...state, errorMessage: action.payload };\n    case \"signin\":\n      return { errorMessage: \"\", token: action.payload };\n    case \"clear_error_message\":\n      return { ...state, errorMessage: \"\" };\n    case \"signout\":\n      return { token: null, errorMessage: \"\" };\n    default:\n      return state;\n  }\n};\n\nconst tryLocalSignin = (dispatch) => async () => {\n  const token = await AsyncStorage.getItem(\"token\");\n  if (token) {\n    dispatch({ type: \"signin\", payload: token });\n    navigate(\"Today\");\n  } else {\n    navigate(\"Signup\");\n  }\n};\n\nconst clearErrorMessage = (dispatch) => () => {\n  dispatch({ type: \"clear_error_message\" });\n};\n\nconst signup = (dispatch) => async ({ email, password, fullName }) => {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then((response) => {\n      const uid = response.user.uid;\n      const data = {\n        id: uid,\n        email,\n        fullName,\n        bio: \"\",\n        pic: false,\n        youtube: \"\",\n        instagram: \"\",\n        tiktok: \"\",\n      };\n      const usersRef = firebase.firestore().collection(\"users\");\n      usersRef\n        .doc(uid)\n        .set(data)\n        .then(() => {\n          AsyncStorage.setItem(\"token\", uid);\n          dispatch({ type: \"signin\", payload: data });\n          navigate(\"Today\");\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"add_error\",\n            payload: error.message,\n          });\n        });\n    })\n    .catch((error) => {\n      dispatch({\n        type: \"add_error\",\n        payload: error.message,\n      });\n    });\n};\n\nconst signin = (dispatch) => async ({ email, password }) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((response) => {\n      const uid = response.user.uid;\n      const usersRef = firebase.firestore().collection(\"users\");\n      usersRef\n        .doc(uid)\n        .get()\n        .then((firestoreDocument) => {\n          if (!firestoreDocument.exists) {\n            dispatch({\n              type: \"add_error\",\n              payload: \"User does not exist\",\n            });\n            return;\n          }\n          const data = firestoreDocument.data();\n          dispatch({ type: \"signin\", payload: data });\n          AsyncStorage.setItem(\"token\", uid);\n          navigate(\"Today\");\n        })\n        .catch((error) => {\n          dispatch({\n            type: \"add_error\",\n            payload: error.message,\n          });\n        });\n    })\n    .catch((error) => {\n      dispatch({\n        type: \"add_error\",\n        payload: error.message,\n      });\n    });\n};\n\nconst signout = (dispatch) => async () => {\n  await AsyncStorage.removeItem(\"token\");\n  dispatch({ type: \"signout\" });\n  navigate(\"loginFlow\");\n};\n\nexport const { Provider, Context } = createDataContext(\n  authReducer,\n  { signin, signout, signup, clearErrorMessage, tryLocalSignin },\n  { token: null, errorMessage: \"\" }\n);\n"]},"metadata":{},"sourceType":"script"}