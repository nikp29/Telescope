{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\n\nvar _Linking = _interopRequireDefault(require(\"react-native-web/dist/exports/Linking\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _Spacer = _interopRequireDefault(require(\"../components/Spacer\"));\n\nvar _AuthContext = require(\"../context/AuthContext\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _config = require(\"../firebase/config.js\");\n\nvar _expoLinearGradient = require(\"expo-linear-gradient\");\n\nvar _Profile = _interopRequireDefault(require(\"../components/Profile\"));\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/src/screens/AccountScreen.js\";\n\nvar AccountScreen = function AccountScreen(props) {\n  var defaultImage = require(\"../../assets/icons/user.png\");\n\n  var _useContext = (0, _react.useContext)(_AuthContext.Context),\n      signout = _useContext.signout;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      bio = _useState2[0],\n      setBio = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(\"\"),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(\"\"),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      youtube = _useState8[0],\n      setYoutube = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(\"\"),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      tiktok = _useState10[0],\n      setTiktok = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(\"\"),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      instagram = _useState12[0],\n      setInstagram = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(defaultImage),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      profilePic = _useState14[0],\n      setProfilePic = _useState14[1];\n\n  var _useState15 = (0, _react.useState)([]),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      reelList = _useState16[0],\n      setReelList = _useState16[1];\n\n  var _useState17 = (0, _react.useState)([]),\n      _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n      expList = _useState18[0],\n      setExpList = _useState18[1];\n\n  (0, _react.useEffect)(function () {\n    getInfo(setBio, setName, setEmail, setProfilePic, setYoutube, setTiktok, setInstagram);\n    getReelList(setReelList);\n    getExpList(setExpList);\n    return function () {\n      null;\n    };\n  }, []);\n\n  var update = function update() {\n    getInfo(setBio, setName, setEmail, setProfilePic, setYoutube, setTiktok, setInstagram);\n  };\n\n  var updateMin = function updateMin() {\n    getReelList(setReelList);\n    getExpList(setExpList);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNavigation.NavigationEvents, {\n    onDidFocus: function onDidFocus(event) {\n      return update();\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_Profile.default, {\n    isOwn: true,\n    reelList: reelList,\n    update: update,\n    updateMin: updateMin,\n    bio: bio,\n    name: name,\n    profilePic: profilePic,\n    youtube: youtube,\n    instagram: instagram,\n    tiktok: tiktok,\n    navigation: props.navigation,\n    expList: expList,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\n\nAccountScreen.navigationOptions = function () {\n  return {\n    header: function header() {\n      return true;\n    }\n  };\n};\n\nvar getInfo = function getInfo(setBio, setName, setEmail, setProfilePic, setYoutube, setTiktok, setInstagram) {\n  var imageURL, uid, userRef, storageRef;\n  return _regenerator.default.async(function getInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          imageURL = false;\n          _context.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(\"token\"));\n\n        case 3:\n          uid = _context.sent;\n          userRef = _config.firebase.firestore().collection(\"users\");\n          storageRef = _config.firebase.storage().ref();\n\n          _config.firebase.firestore().collection(\"users\").doc(uid).get().then(function (doc) {\n            setBio(doc.data().bio);\n            setName(doc.data().fullName);\n            setEmail(doc.data().email);\n            setYoutube(doc.data().youtube);\n            setTiktok(doc.data().tiktok);\n            setInstagram(doc.data().instagram);\n            imageURL = doc.data().pic;\n          }).then(function () {\n            if (imageURL) {\n              storageRef.child(\"profile_pictures/\" + uid + \".jpg\").getDownloadURL().then(function (url) {\n                setProfilePic({\n                  uri: url\n                });\n              });\n            }\n          }).catch(function (error) {\n            console.error(\"Error fetching document: \", error);\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getReelList = function getReelList(setReelList) {\n  var uid, reelsRef, reelList_, reel_id;\n  return _regenerator.default.async(function getReelList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(\"token\"));\n\n        case 2:\n          uid = _context2.sent;\n          reelsRef = _config.firebase.firestore().collection(\"reels\");\n          reelList_ = [];\n          reel_id = \"\";\n          reelsRef.where(\"user\", \"==\", uid).orderBy(\"timestamp\", \"desc\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var data_ = doc.data();\n              data_[\"id\"] = doc.id;\n              reelList_.push(data_);\n            });\n            setReelList(reelList_);\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getExpList = function getExpList(setExpList) {\n  var uid, expRef, expList_, reel_id;\n  return _regenerator.default.async(function getExpList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(\"token\"));\n\n        case 2:\n          uid = _context3.sent;\n          console.log(\"getting exp\");\n          expRef = _config.firebase.firestore().collection(\"users\").doc(uid).collection(\"experiences\");\n          expList_ = [];\n          reel_id = \"\";\n          expRef.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var data_ = doc.data();\n              data_[\"id\"] = doc.id;\n              console.log(\"exp doc id \" + doc.id);\n              expList_.push(data_);\n            });\n            setExpList(expList_);\n          });\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = _StyleSheet.default.create({\n  textInput: {\n    color: \"black\"\n  },\n  imageCenter: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inline: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  name: {\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 32,\n    fontWeight: \"bold\"\n  },\n  bio: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 16,\n    color: \"#545454\",\n    fontWeight: \"normal\"\n  },\n  reels: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 14,\n    fontWeight: \"normal\"\n  },\n  icon: {\n    height: 20,\n    width: 20\n  }\n});\n\nvar _default = AccountScreen;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/screens/AccountScreen.js"],"names":["AccountScreen","props","defaultImage","require","AuthContext","signout","bio","setBio","name","setName","email","setEmail","youtube","setYoutube","tiktok","setTiktok","instagram","setInstagram","profilePic","setProfilePic","reelList","setReelList","expList","setExpList","getInfo","getReelList","getExpList","update","updateMin","event","navigation","navigationOptions","header","imageURL","AsyncStorage","getItem","uid","userRef","firebase","firestore","collection","storageRef","storage","ref","doc","get","then","data","fullName","pic","child","getDownloadURL","url","uri","catch","error","console","reelsRef","reelList_","reel_id","where","orderBy","querySnapshot","forEach","data_","id","push","log","expRef","expList_","styles","StyleSheet","create","textInput","color","imageCenter","justifyContent","alignItems","inline","flexDirection","flexWrap","fontFamily","fontSize","fontWeight","reels","icon","height","width"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Linking,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\nimport Spacer from \"../components/Spacer\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { firebase } from \"../firebase/config.js\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Profile from \"../components/Profile\";\nimport { NavigationEvents } from \"react-navigation\";\n\nconst AccountScreen = (props) => {\n  const defaultImage = require(\"../../assets/icons/user.png\");\n  const { signout } = useContext(AuthContext);\n  const [bio, setBio] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [tiktok, setTiktok] = useState(\"\");\n  const [instagram, setInstagram] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(defaultImage);\n  const [reelList, setReelList] = useState([]);\n  const [expList, setExpList] = useState([]);\n\n  useEffect(() => {\n    getInfo(\n      setBio,\n      setName,\n      setEmail,\n      setProfilePic,\n      setYoutube,\n      setTiktok,\n      setInstagram\n    );\n    getReelList(setReelList);\n    getExpList(setExpList);\n    return () => {\n      null;\n    };\n  }, []);\n  const update = () => {\n    getInfo(\n      setBio,\n      setName,\n      setEmail,\n      setProfilePic,\n      setYoutube,\n      setTiktok,\n      setInstagram\n    );\n  };\n\n  const updateMin = () => {\n    getReelList(setReelList);\n    getExpList(setExpList);\n  }\n\n  // if (email == \"\") {\n  //   getInfo(\n  //     setBio,\n  //     setName,\n  //     setEmail,\n  //     setProfilePic,\n  //     setYoutube,\n  //     setTiktok,\n  //     setInstagram\n  //   );\n  //   getReelList(setReelList);\n  // }\n\n  return (\n    <>\n      <NavigationEvents onDidFocus={(event) => update()} />\n      <Profile\n        isOwn={true}\n        reelList={reelList}\n        update={update}\n        updateMin={updateMin}\n        bio={bio}\n        name={name}\n        profilePic={profilePic}\n        youtube={youtube}\n        instagram={instagram}\n        tiktok={tiktok}\n        navigation={props.navigation}\n        expList={expList}\n      />\n    </>\n  );\n};\n\nAccountScreen.navigationOptions = () => {\n  return {\n    header: () => true,\n  };\n};\n\nconst getInfo = async (\n  setBio,\n  setName,\n  setEmail,\n  setProfilePic,\n  setYoutube,\n  setTiktok,\n  setInstagram\n) => {\n  var imageURL = false;\n  const uid = await AsyncStorage.getItem(\"token\");\n  const userRef = firebase.firestore().collection(\"users\");\n  var storageRef = firebase.storage().ref();\n\n  firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(uid)\n    .get()\n    .then((doc) => {\n      setBio(doc.data().bio);\n      setName(doc.data().fullName);\n      setEmail(doc.data().email);\n      setYoutube(doc.data().youtube);\n      setTiktok(doc.data().tiktok);\n      setInstagram(doc.data().instagram);\n      imageURL = doc.data().pic;\n    })\n    .then(() => {\n      if (imageURL) {\n        storageRef\n          .child(\"profile_pictures/\" + uid + \".jpg\")\n          .getDownloadURL()\n          .then((url) => {\n            setProfilePic({ uri: url });\n          });\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error fetching document: \", error);\n    });\n};\n\nconst getReelList = async (setReelList) => {\n  const uid = await AsyncStorage.getItem(\"token\");\n  const reelsRef = firebase.firestore().collection(\"reels\");\n  let reelList_ = [];\n  let reel_id = \"\";\n  reelsRef\n    .where(\"user\", \"==\", uid)\n    .orderBy(\"timestamp\", \"desc\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        let data_ = doc.data();\n        data_[\"id\"] = doc.id;\n        reelList_.push(data_);\n      });\n      setReelList(reelList_);\n    });\n};\n\nconst getExpList = async (setExpList) => {\n  const uid = await AsyncStorage.getItem(\"token\");\n  console.log(\"getting exp\");\n  const expRef = firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(uid)\n    .collection(\"experiences\");\n  let expList_ = [];\n  let reel_id = \"\";\n  expRef.get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n      let data_ = doc.data();\n      data_[\"id\"] = doc.id;\n      console.log(\"exp doc id \" + doc.id);\n      expList_.push(data_);\n    });\n    setExpList(expList_);\n  });\n};\n\nconst styles = StyleSheet.create({\n  textInput: {\n    color: \"black\",\n  },\n  imageCenter: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inline: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  name: {\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n  bio: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 16,\n    color: \"#545454\",\n    fontWeight: \"normal\",\n  },\n  reels: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 14,\n    fontWeight: \"normal\",\n  },\n  icon: {\n    height: 20,\n    width: 20,\n  },\n});\n\nexport default AccountScreen;\n"]},"metadata":{},"sourceType":"script"}