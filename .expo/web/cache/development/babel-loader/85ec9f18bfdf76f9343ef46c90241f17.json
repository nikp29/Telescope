{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _FlatList = _interopRequireDefault(require(\"react-native-web/dist/exports/FlatList\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _ScrollView = _interopRequireDefault(require(\"react-native-web/dist/exports/ScrollView\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _expoFont = require(\"expo-font\");\n\nvar _reactNavigation = require(\"react-navigation\");\n\nvar _Spacer = _interopRequireDefault(require(\"../components/Spacer\"));\n\nvar _config = require(\"../firebase/config.js\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _DiscussionFeedCard = _interopRequireDefault(require(\"../components/DiscussionFeedCard\"));\n\nvar _navigationRef = require(\"../navigationRef\");\n\nvar _FontAwesome = _interopRequireDefault(require(\"@expo/vector-icons/FontAwesome\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/src/screens/DiscussionFeed.js\";\n\nvar DiscussionFeed = function DiscussionFeed(props) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      initialGet = _useState2[0],\n      setInitialGet = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      discussionList = _useState4[0],\n      setDiscussionList = _useState4[1];\n\n  if (initialGet == false) {\n    setInitialGet(true);\n    getDiscussions(setDiscussionList);\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNavigation.NavigationEvents, {\n    onWillFocus: function onWillFocus(payload) {\n      return getDiscussions(setDiscussionList);\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_ScrollView.default, {\n    style: {\n      backgroundColor: \"white\",\n      marginTop: 82\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Spacer.default, {\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, discussionList.length != 0 ? _react.default.createElement(_Text.default, {\n    style: styles.header,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Discussions\") : null, _react.default.createElement(_FlatList.default, {\n    showsVerticalScrollIndicator: false,\n    data: discussionList,\n    keyExtractor: function keyExtractor(data) {\n      return data.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return renderReelFeedView(item);\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_View.default, {\n    style: styles.topBar,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_TouchableOpacity.default, {\n    style: {\n      zIndex: 2\n    },\n    onPress: function onPress() {\n      (0, _navigationRef.navigate)(\"UploadDiscussion\");\n    },\n    style: styles.uploadContainer,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: styles.uploadText,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};\n\nDiscussionFeed.navigationOptions = function () {\n  return {\n    header: function header() {\n      return false;\n    }\n  };\n};\n\nvar getDiscussions = function getDiscussions(setDiscussionList) {\n  var discussRef, discussionList_;\n  return _regenerator.default.async(function getDiscussions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          discussRef = _config.firebase.firestore().collection(\"discussions\");\n          discussionList_ = [];\n          console.log(\"getting data\");\n          discussRef.orderBy(\"timestamp\", \"desc\").get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              var data_ = doc.data();\n              data_[\"id\"] = doc.id;\n              discussionList_.push(data_);\n            });\n            setDiscussionList(discussionList_);\n          }).catch(function (error) {\n            console.log(error.message);\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar renderReelFeedView = function renderReelFeedView(data) {\n  return _react.default.createElement(_DiscussionFeedCard.default, {\n    title: data.title,\n    description: data.description,\n    upvotes: data.upvotes,\n    id: data.id,\n    data: data,\n    num_comments: data.num_comments,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  });\n};\n\nvar styles = _StyleSheet.default.create({\n  tabBar: {\n    paddingHorizontal: 16,\n    flexDirection: \"row\",\n    paddingTop: 60,\n    justifyContent: \"space-around\",\n    opacity: 50,\n    backgroundColor: \"white\",\n    paddingBottom: 8\n  },\n  tab: {\n    fontFamily: \"Raleway-Bold\",\n    fontWeight: \"400\",\n    fontSize: 25,\n    color: \"#ccc0ff\"\n  },\n  tabActive: {\n    fontFamily: \"Raleway-Bold\",\n    fontWeight: \"400\",\n    fontSize: 25,\n    color: \"#5c33ff\"\n  },\n  header: {\n    fontSize: 30,\n    fontFamily: \"RalewayExtraBold\",\n    marginBottom: 16\n  },\n  topBar: {\n    position: \"absolute\",\n    top: 0,\n    paddingTop: 45,\n    backgroundColor: \"white\",\n    left: 0,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  uploadContainer: {\n    padding: 8,\n    marginRight: 8\n  },\n  uploadText: {\n    color: \"#5C33FF\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 18\n  }\n});\n\nvar _default = DiscussionFeed;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/screens/DiscussionFeed.js"],"names":["DiscussionFeed","props","initialGet","setInitialGet","discussionList","setDiscussionList","getDiscussions","payload","backgroundColor","marginTop","length","styles","header","data","id","item","renderReelFeedView","topBar","zIndex","uploadContainer","uploadText","navigationOptions","discussRef","firebase","firestore","collection","discussionList_","console","log","orderBy","get","then","querySnapshot","forEach","doc","data_","push","catch","error","message","title","description","upvotes","num_comments","StyleSheet","create","tabBar","paddingHorizontal","flexDirection","paddingTop","justifyContent","opacity","paddingBottom","tab","fontFamily","fontWeight","fontSize","color","tabActive","marginBottom","position","top","left","width","padding","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FlatList,\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport \"react-native-gesture-handler\";\nimport { useFonts } from \"expo-font\";\nimport { NavigationEvents } from \"react-navigation\";\nimport Spacer from \"../components/Spacer\";\nimport { firebase } from \"../firebase/config.js\";\nimport moment from \"moment\";\nimport DiscussionFeedCard from \"../components/DiscussionFeedCard\";\nimport { navigate } from \"../navigationRef\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nconst DiscussionFeed = (props) => {\n  const [initialGet, setInitialGet] = useState(false);\n  const [discussionList, setDiscussionList] = useState([]);\n\n  if (initialGet == false) {\n    setInitialGet(true);\n    getDiscussions(setDiscussionList);\n  }\n  return (\n    <>\n      <NavigationEvents\n        onWillFocus={(payload) => getDiscussions(setDiscussionList)}\n      />\n      <ScrollView style={{ backgroundColor: \"white\", marginTop: 82 }}>\n        <Spacer>\n          {discussionList.length != 0 ? (\n            <Text style={styles.header}>Discussions</Text>\n          ) : null}\n\n          <FlatList\n            showsVerticalScrollIndicator={false}\n            data={discussionList}\n            keyExtractor={(data) => data.id}\n            renderItem={({ item }) => {\n              return renderReelFeedView(item);\n            }}\n          />\n        </Spacer>\n      </ScrollView>\n      <View style={styles.topBar}>\n        <TouchableOpacity\n          style={{ zIndex: 2 }}\n          onPress={() => {\n            navigate(\"UploadDiscussion\");\n          }}\n          style={styles.uploadContainer}\n        >\n          <Text style={styles.uploadText}>Create</Text>\n        </TouchableOpacity>\n      </View>\n    </>\n  );\n};\n\nDiscussionFeed.navigationOptions = () => {\n  return {\n    header: () => false,\n  };\n};\n\nconst getDiscussions = async (setDiscussionList) => {\n  let discussRef = firebase.firestore().collection(\"discussions\");\n  let discussionList_ = [];\n  console.log(\"getting data\");\n  discussRef\n    .orderBy(\"timestamp\", \"desc\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        let data_ = doc.data();\n        data_[\"id\"] = doc.id;\n        discussionList_.push(data_);\n      });\n      setDiscussionList(discussionList_);\n    })\n    .catch((error) => {\n      console.log(error.message);\n    });\n};\n\nconst renderReelFeedView = (data) => {\n  return (\n    <DiscussionFeedCard\n      title={data.title}\n      description={data.description}\n      upvotes={data.upvotes}\n      id={data.id}\n      data={data}\n      num_comments={data.num_comments}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    paddingHorizontal: 16,\n    flexDirection: \"row\",\n    paddingTop: 60,\n    justifyContent: \"space-around\",\n    opacity: 50,\n    backgroundColor: \"white\",\n    paddingBottom: 8,\n  },\n  tab: {\n    fontFamily: \"Raleway-Bold\",\n    fontWeight: \"400\",\n    fontSize: 25,\n    color: \"#ccc0ff\",\n  },\n  tabActive: {\n    fontFamily: \"Raleway-Bold\",\n    fontWeight: \"400\",\n    fontSize: 25,\n    color: \"#5c33ff\",\n  },\n  header: {\n    fontSize: 30,\n    fontFamily: \"RalewayExtraBold\",\n    marginBottom: 16,\n  },\n  topBar: {\n    position: \"absolute\",\n    top: 0,\n    paddingTop: 45,\n    backgroundColor: \"white\",\n    left: 0,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  uploadContainer: {\n    padding: 8,\n    marginRight: 8,\n  },\n  uploadText: {\n    color: \"#5C33FF\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 18,\n  },\n});\n\nexport default DiscussionFeed;\n"]},"metadata":{},"sourceType":"script"}