{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _TextInput = _interopRequireDefault(require(\"react-native-web/dist/exports/TextInput\"));\n\nvar _Keyboard = _interopRequireDefault(require(\"react-native-web/dist/exports/Keyboard\"));\n\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Alert = _interopRequireDefault(require(\"react-native-web/dist/exports/Alert\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/src/components/DiscussionForm.js\";\n\nvar DiscussionForm = function DiscussionForm(_ref) {\n  var headerText = _ref.headerText,\n      errorMessage = _ref.errorMessage,\n      onSubmit = _ref.onSubmit,\n      submitButtonText = _ref.submitButtonText,\n      setError = _ref.setError,\n      goback = _ref.goback;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var createDiscussion = function createDiscussion() {\n    if (title.length > 0 && title.length <= 100) {\n      if (description.length >= 1) {\n        setError(\"\");\n        onSubmit({\n          title: title,\n          description: description,\n          setError: setError\n        });\n      } else {\n        setError(\"Description cannot be empty\");\n      }\n    } else {\n      setError(\"Title cannot be empty or longer than 100 characters\");\n    }\n  };\n\n  var makeAlert = function makeAlert() {\n    {\n      _Alert.default.alert(\"Create new discussion?\", \"\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"OK\",\n        onPress: function onPress() {\n          return createDiscussion();\n        }\n      }]);\n    }\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeElements.Text, {\n    style: styles.title,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, headerText), _react.default.createElement(_View.default, {\n    style: styles.inputContainer,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_TextInput.default, {\n    style: styles.input,\n    value: title,\n    onChangeText: setTitle,\n    placeholder: \"Discussion Title\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    onPress: function onPress() {\n      return _Keyboard.default.dismiss();\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_View.default, {\n    style: styles.inputContainerMulti,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_TextInput.default, {\n    style: styles.inputMulti,\n    placeholder: \"Discussion topic description\",\n    value: description,\n    onChangeText: setDescription,\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    multiline: true,\n    returnKeyType: \"done\",\n    blurOnSubmit: true,\n    onPress: function onPress() {\n      return _Keyboard.default.dismiss();\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      _Keyboard.default.dismiss();\n\n      makeAlert();\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), errorMessage ? _react.default.createElement(_reactNativeElements.Text, {\n    style: styles.errorMessage,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, errorMessage) : null), _react.default.createElement(_View.default, {\n    style: styles.topBar,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    style: {\n      zIndex: 2\n    },\n    onPress: goback,\n    style: styles.uploadContainer,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeElements.Text, {\n    style: styles.uploadText,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Back\")), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    style: {\n      zIndex: 2\n    },\n    onPress: function onPress() {\n      return makeAlert();\n    },\n    style: styles.uploadContainer,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeElements.Text, {\n    style: styles.uploadText,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, submitButtonText))));\n};\n\nvar styles = _StyleSheet.default.create({\n  errorMessage: {\n    fontSize: 16,\n    color: \"red\",\n    marginLeft: 15,\n    marginTop: 15\n  },\n  inputContainer: {\n    backgroundColor: \"rgba(255, 215, 112, 0.7)\",\n    width: \"80%\",\n    borderRadius: 16,\n    marginTop: 32\n  },\n  inputContainerMulti: {\n    backgroundColor: \"rgba(255, 215, 112, 0.7)\",\n    width: \"80%\",\n    borderRadius: 16,\n    marginTop: 32,\n    padding: 24\n  },\n  input: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 18,\n    padding: 24\n  },\n  inputMulti: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 18,\n    maxHeight: 90\n  },\n  title: {\n    width: \"100%\",\n    textAlign: \"left\",\n    paddingLeft: \"10%\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 28,\n    color: \"#5C33FF\",\n    paddingTop: 180\n  },\n  topBar: {\n    position: \"absolute\",\n    top: 0,\n    paddingTop: 45,\n    backgroundColor: \"white\",\n    left: 0,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  uploadContainer: {\n    padding: 8,\n    marginRight: 8\n  },\n  uploadText: {\n    color: \"#5C33FF\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 18\n  }\n});\n\nvar _default = DiscussionForm;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/components/DiscussionForm.js"],"names":["DiscussionForm","headerText","errorMessage","onSubmit","submitButtonText","setError","goback","title","setTitle","description","setDescription","createDiscussion","length","makeAlert","Alert","alert","text","onPress","console","log","style","width","alignItems","x","y","styles","inputContainer","input","Keyboard","dismiss","inputContainerMulti","inputMulti","topBar","zIndex","uploadContainer","uploadText","StyleSheet","create","fontSize","color","marginLeft","marginTop","backgroundColor","borderRadius","padding","fontFamily","maxHeight","textAlign","paddingLeft","paddingTop","position","top","left","flexDirection","justifyContent","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, TextInput, Keyboard } from \"react-native\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Text } from \"react-native-elements\";\nimport { Alert } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst DiscussionForm = ({\n  headerText,\n  errorMessage,\n  onSubmit,\n  submitButtonText,\n  setError,\n  goback,\n}) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const createDiscussion = () => {\n    if (title.length > 0 && title.length <= 100) {\n      if (description.length >= 1) {\n        setError(\"\");\n        onSubmit({\n          title,\n          description,\n          setError,\n        });\n      } else {\n        setError(\"Description cannot be empty\");\n      }\n    } else {\n      setError(\"Title cannot be empty or longer than 100 characters\");\n    }\n  };\n  const makeAlert = () => {\n    {\n      Alert.alert(\"Create new discussion?\", \"\", [\n        {\n          text: \"Cancel\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\",\n        },\n        { text: \"OK\", onPress: () => createDiscussion() },\n      ]);\n    }\n  };\n\n  return (\n    <>\n      <KeyboardAwareScrollView\n        style={{ width: \"100%\" }}\n        contentContainerStyle={{ alignItems: \"center\" }}\n        resetScrollToCoords={{ x: 0, y: 0 }}\n      >\n        <Text style={styles.title}>{headerText}</Text>\n\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={title}\n            onChangeText={setTitle}\n            placeholder={\"Discussion Title\"}\n            autoCapitalize=\"words\"\n            autoCorrect={false}\n            onPress={() => Keyboard.dismiss()}\n          />\n        </View>\n        <View style={styles.inputContainerMulti}>\n          <TextInput\n            style={styles.inputMulti}\n            placeholder=\"Discussion topic description\"\n            value={description}\n            onChangeText={setDescription}\n            autoCapitalize=\"sentences\"\n            autoCorrect={true}\n            multiline\n            returnKeyType=\"done\"\n            // textAlignVertical\n            blurOnSubmit={true}\n            onPress={() => Keyboard.dismiss()}\n            onSubmitEditing={() => {\n              Keyboard.dismiss();\n              makeAlert();\n            }}\n          />\n        </View>\n        {errorMessage ? (\n          <Text style={styles.errorMessage}>{errorMessage}</Text>\n        ) : null}\n      </KeyboardAwareScrollView>\n      <View style={styles.topBar}>\n        <TouchableOpacity\n          style={{ zIndex: 2 }}\n          onPress={goback}\n          style={styles.uploadContainer}\n        >\n          <Text style={styles.uploadText}>Back</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{ zIndex: 2 }}\n          onPress={() => makeAlert()}\n          style={styles.uploadContainer}\n        >\n          <Text style={styles.uploadText}>{submitButtonText}</Text>\n        </TouchableOpacity>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  errorMessage: {\n    fontSize: 16,\n    color: \"red\",\n    marginLeft: 15,\n    marginTop: 15,\n  },\n  inputContainer: {\n    backgroundColor: \"rgba(255, 215, 112, 0.7)\",\n    width: \"80%\",\n    borderRadius: 16,\n    marginTop: 32,\n  },\n  inputContainerMulti: {\n    backgroundColor: \"rgba(255, 215, 112, 0.7)\",\n    width: \"80%\",\n    borderRadius: 16,\n    marginTop: 32,\n    padding: 24,\n  },\n  input: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 18,\n    padding: 24,\n  },\n  inputMulti: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 18,\n    maxHeight: 90,\n  },\n  title: {\n    width: \"100%\",\n    textAlign: \"left\",\n    paddingLeft: \"10%\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 28,\n    color: \"#5C33FF\",\n    paddingTop: 180,\n  },\n  topBar: {\n    position: \"absolute\",\n    top: 0,\n    paddingTop: 45,\n    backgroundColor: \"white\",\n    left: 0,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  uploadContainer: {\n    padding: 8,\n    marginRight: 8,\n  },\n  uploadText: {\n    color: \"#5C33FF\",\n    fontFamily: \"Raleway-Bold\",\n    fontSize: 18,\n  },\n});\n\nexport default DiscussionForm;\n"]},"metadata":{},"sourceType":"script"}