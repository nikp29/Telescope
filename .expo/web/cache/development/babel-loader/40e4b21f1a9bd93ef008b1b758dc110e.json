{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isWebColor = _interopRequireDefault(require(\"../isWebColor\"));\n\nvar _processColor = _interopRequireDefault(require(\"../../exports/processColor\"));\n\nvar normalizeColor = function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n\n  if (typeof color === 'string' && (0, _isWebColor.default)(color)) {\n    return color;\n  }\n\n  var colorInt = (0, _processColor.default)(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n};\n\nvar _default = normalizeColor;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/node_modules/react-native-web/src/modules/normalizeColor/index.js"],"names":["normalizeColor","color","opacity","colorInt","r","g","b","a","alpha","toFixed"],"mappings":";;;;;;;AASA;;AACA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAmD;AAAA,MAAzBC,OAAyB,uEAAN,CAAM;AACxE,MAAID,KAAK,IAAI,IAAb,EAAmB;;AAEnB,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,yBAAWA,KAAX,CAAjC,EAAoD;AAClD,WAAOA,KAAP;AACD;;AAED,MAAME,QAAQ,GAAG,2BAAaF,KAAb,CAAjB;;AACA,MAAIE,QAAQ,IAAI,IAAhB,EAAsB;AACpB,QAAMC,CAAC,GAAID,QAAQ,IAAI,EAAb,GAAmB,GAA7B;AACA,QAAME,CAAC,GAAIF,QAAQ,IAAI,CAAb,GAAkB,GAA5B;AACA,QAAMG,CAAC,GAAGH,QAAQ,GAAG,GAArB;AACA,QAAMI,CAAC,GAAG,CAAEJ,QAAQ,IAAI,EAAb,GAAmB,GAApB,IAA2B,GAArC;AACA,QAAMK,KAAK,GAAG,CAACD,CAAC,GAAGL,OAAL,EAAcO,OAAd,CAAsB,CAAtB,CAAd;AACA,qBAAeL,CAAf,SAAoBC,CAApB,SAAyBC,CAAzB,SAA8BE,KAA9B;AACD;AACF,CAhBD;;eAkBeR,c","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport isWebColor from '../isWebColor';\nimport processColor from '../../exports/processColor';\n\nconst normalizeColor = (color?: number | string, opacity?: number = 1) => {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color);\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n};\n\nexport default normalizeColor;\n"]},"metadata":{},"sourceType":"script"}