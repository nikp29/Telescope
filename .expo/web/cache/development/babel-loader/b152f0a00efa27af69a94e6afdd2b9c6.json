{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\n\nvar _config = require(\"../firebase/config.js\");\n\nvar _ProfileIcon = _interopRequireDefault(require(\"../components/ProfileIcon\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"@expo/vector-icons/FontAwesome\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/src/components/CommentCard.js\";\n\nvar CommentCard = function CommentCard(_ref) {\n  var data = _ref.data,\n      uid = _ref.uid;\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      upvoted = _useState4[0],\n      setUpvoted = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    function fetchUser() {\n      var uid_, usersRef;\n      return _regenerator.default.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uid_ = data.user;\n              usersRef = _config.firebase.firestore().collection(\"users\");\n              _context.next = 4;\n              return _regenerator.default.awrap(usersRef.doc(uid_).get().then(function (firestoreDocument) {\n                var data = firestoreDocument.data();\n                data[\"id\"] = uid_;\n                setUser(data);\n              }).catch(function (error) {\n                return console.log(error.message);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    setUpvoted(data.upvotes.includes(uid));\n    fetchUser();\n    return function () {\n      null;\n    };\n  }, []);\n  var time = _moment.default.unix(data.timestamp).add(1, \"d\") > (0, _moment.default)() ? _moment.default.unix(data.timestamp).format(\"LT\") : _moment.default.unix(data.timestamp).format(\"MM/DD/YYYY\");\n  return _react.default.createElement(_View.default, {\n    style: styles.commentCard,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_View.default, {\n    style: styles.col1,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_ProfileIcon.default, {\n    uid: data.user,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_View.default, {\n    style: styles.col2,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: styles.userText,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, user && user.fullName), _react.default.createElement(_Text.default, {\n    style: styles.description,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, data.description)), _react.default.createElement(_View.default, {\n    style: styles.col3,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_TouchableOpacity.default, {\n    style: styles.upvoteBox,\n    onPress: function onPress() {\n      editVote(data.upvotes, data.id, setUpvoted, data.reel_id, uid);\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_FontAwesome.default, {\n    name: upvoted ? \"heart\" : \"heart-o\",\n    size: 30,\n    color: upvoted ? \"#FFD770\" : \"#999999\",\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_Text.default, {\n    style: styles.upvoteText,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, data.upvotes.length))));\n};\n\nvar editVote = function editVote(upvotes, id, setUpvoted, reel_id, uid) {\n  var reelsRef, new_upvotes;\n  return _regenerator.default.async(function editVote$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          reelsRef = _config.firebase.firestore().collection(\"reels/\" + reel_id + \"/comments\");\n          new_upvotes = upvotes;\n\n          if (!upvotes.includes(uid)) {\n            _context2.next = 9;\n            break;\n          }\n\n          new_upvotes.splice(new_upvotes.indexOf(uid), 1);\n          _context2.next = 6;\n          return _regenerator.default.awrap(reelsRef.doc(id).update({\n            upvotes: new_upvotes\n          }));\n\n        case 6:\n          setUpvoted(false);\n          _context2.next = 13;\n          break;\n\n        case 9:\n          new_upvotes.push(uid);\n          _context2.next = 12;\n          return _regenerator.default.awrap(reelsRef.doc(id).update({\n            upvotes: new_upvotes\n          }));\n\n        case 12:\n          setUpvoted(true);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = _StyleSheet.default.create({\n  commentCard: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 16\n  },\n  col1: {\n    marginRight: 8\n  },\n  col2: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginRight: 8\n  },\n  col3: {\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  description: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 15\n  },\n  userText: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 13,\n    color: \"#86878B\"\n  },\n  upvoteBox: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  upvoteText: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 13,\n    color: \"#86878B\"\n  }\n});\n\nvar _default = CommentCard;\nexports.default = _default;","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/src/components/CommentCard.js"],"names":["CommentCard","data","uid","user","setUser","upvoted","setUpvoted","fetchUser","uid_","usersRef","firebase","firestore","collection","doc","get","then","firestoreDocument","catch","error","console","log","message","upvotes","includes","time","moment","unix","timestamp","add","format","styles","commentCard","col1","col2","userText","fullName","description","col3","upvoteBox","editVote","id","reel_id","upvoteText","length","reelsRef","new_upvotes","splice","indexOf","update","push","StyleSheet","create","flexDirection","width","padding","marginRight","flex","justifyContent","fontFamily","fontSize","color","alignItems"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\nimport { firebase } from \"../firebase/config.js\";\nimport ProfileIcon from \"../components/ProfileIcon\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nconst CommentCard = ({ data, uid }) => {\n  const [user, setUser] = useState({});\n  const [upvoted, setUpvoted] = useState(false);\n\n  useEffect(() => {\n    async function fetchUser() {\n      const uid_ = data.user;\n      const usersRef = firebase.firestore().collection(\"users\");\n      await usersRef\n        .doc(uid_)\n        .get()\n        .then((firestoreDocument) => {\n          let data = firestoreDocument.data();\n          data[\"id\"] = uid_;\n          setUser(data);\n        })\n        .catch((error) => console.log(error.message));\n    }\n    setUpvoted(data.upvotes.includes(uid));\n    fetchUser();\n    return () => {\n      null;\n    };\n  }, []);\n\n  const time =\n    moment.unix(data.timestamp).add(1, \"d\") > moment()\n      ? moment.unix(data.timestamp).format(\"LT\")\n      : moment.unix(data.timestamp).format(\"MM/DD/YYYY\");\n\n  return (\n    <View style={styles.commentCard}>\n      <View style={styles.col1}>\n        <ProfileIcon uid={data.user} />\n      </View>\n      <View style={styles.col2}>\n        <Text style={styles.userText}>{user && user.fullName}</Text>\n        <Text style={styles.description}>{data.description}</Text>\n      </View>\n      <View style={styles.col3}>\n        <TouchableOpacity\n          style={styles.upvoteBox}\n          onPress={() => {\n            editVote(data.upvotes, data.id, setUpvoted, data.reel_id, uid);\n          }}\n        >\n          <Icon\n            name={upvoted ? \"heart\" : \"heart-o\"}\n            size={30}\n            color={upvoted ? \"#FFD770\" : \"#999999\"}\n          />\n          <Text style={styles.upvoteText}>{data.upvotes.length}</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst editVote = async (upvotes, id, setUpvoted, reel_id, uid) => {\n  const reelsRef = firebase.firestore().collection(`reels/${reel_id}/comments`);\n\n  let new_upvotes = upvotes;\n  if (upvotes.includes(uid)) {\n    new_upvotes.splice(new_upvotes.indexOf(uid), 1);\n    await reelsRef.doc(id).update({ upvotes: new_upvotes });\n    setUpvoted(false);\n  } else {\n    // reel has not already been upvoted\n    new_upvotes.push(uid);\n    await reelsRef.doc(id).update({ upvotes: new_upvotes });\n    setUpvoted(true);\n  }\n};\n\nconst styles = StyleSheet.create({\n  commentCard: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 16,\n  },\n  col1: {\n    marginRight: 8,\n  },\n  col2: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginRight: 8,\n  },\n  col3: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  description: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 15,\n  },\n  userText: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 13,\n    color: \"#86878B\",\n  },\n  upvoteBox: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  upvoteText: {\n    fontFamily: \"Raleway-Regular\",\n    fontSize: 13,\n    color: \"#86878B\",\n  },\n});\n\nexport default CommentCard;\n"]},"metadata":{},"sourceType":"script"}