{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedFunction = createAnimatedFunction;\n\nvar _construct2 = _interopRequireDefault(require(\"@babel/runtime/helpers/construct\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedCallFunc = require(\"./AnimatedCallFunc\");\n\nvar _AnimatedParam = require(\"./AnimatedParam\");\n\nvar _val = require(\"../val\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AnimatedFunction = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedFunction, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedFunction);\n\n  function AnimatedFunction(what) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedFunction);\n    (0, _invariant.default)(what instanceof _AnimatedNode2.default, \"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \".concat(what));\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    _this = _super.call(this, {\n      type: 'func',\n      what: what\n    }, [what].concat(params));\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_what\", void 0);\n\n    _this._what = what;\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedFunction, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return (0, _val.val)(this._what);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedFunction, id: \".concat(this.__nodeID);\n    }\n  }]);\n  return AnimatedFunction;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedFunction(cb) {\n  var params = new Array(cb.length);\n\n  for (var i = 0; i < params.length; i++) {\n    params[i] = (0, _AnimatedParam.createAnimatedParam)();\n  }\n\n  var what = cb.apply(void 0, params);\n  var func = (0, _construct2.default)(AnimatedFunction, [what].concat(params));\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (args.length !== params.length) {\n      throw new Error('Parameter mismatch when calling reanimated function. Expected ' + params.length + ' parameters, got ' + args.length + '.');\n    }\n\n    return (0, _AnimatedCallFunc.createAnimatedCallFunc)(func, args, params);\n  };\n}","map":{"version":3,"sources":["AnimatedFunction.js"],"names":["constructor","invariant","what","type","__onEvaluate","val","toString","params","cb","i","func","args","createAnimatedCallFunc"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;IAEA,gB;;;;;AAGEA,4BAAW,IAAXA,EAA6B;AAAA;;AAAA;AAC3BC,4BACEC,IAAI,YADG,sBAATD,EAAS,uFAAA,MAAA,CAATA,IAAS,CAATA;;AAD2B,sCAAlB,MAAkB;AAAlB,MAAA,MAAkB;AAAA;;AAK3B,8BACE;AACEE,MAAAA,IAAI,EADN,MAAA;AAEED,MAAAA,IAAAA,EAAAA;AAFF,KADF,GAKE,IALF,SAAA,MAAA;;AAL2B,IAAA,eAAA,8CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAY3B,UAAA,KAAA,GAAA,IAAA;;AACA,UAAA,QAAA;;AAb2B;AAc5B;;;;WAEDE,wBAAe;AACb,aAAOC,cAAI,KAAX,KAAOA,CAAP;AACD;;;WAEDC,oBAAW;AACT,aAAA,yBAAA,MAAA,CAAgC,KAAhC,QAAA,CAAA;AACD;;;EAzBH,sB;;AA4BO,SAAA,sBAAA,CAAA,EAAA,EAAoC;AACzC,MAAMC,MAAM,GAAG,IAAA,KAAA,CAAUC,EAAE,CAA3B,MAAe,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,MAAM,CAA1B,MAAA,EAAmCE,CAAnC,EAAA,EAAwC;AACtCF,IAAAA,MAAM,CAANA,CAAM,CAANA,GAAAA,yCAAAA;AAHuC;;AAMzC,MAAML,IAAI,GAAGM,EAAE,MAAFA,SAAb,MAAaA,CAAb;AACA,MAAME,IAAI,4BAAG,gBAAH,GAAG,IAAH,SAAV,MAAU,EAAV;AACA,SAAO,YAAa;AAAA,uCAAb,IAAa;AAAb,MAAA,IAAa;AAAA;;AAClB,QAAIC,IAAI,CAAJA,MAAAA,KAAgBJ,MAAM,CAA1B,MAAA,EAAmC;AACjC,YAAM,IAAA,KAAA,CACJ,mEACEA,MAAM,CADR,MAAA,GAAA,mBAAA,GAGEI,IAAI,CAHN,MAAA,GADF,GAAM,CAAN;AAOD;;AACD,WAAOC,8CAAsB,IAAtBA,EAAsB,IAAtBA,EAAP,MAAOA,CAAP;AAVF,GAAA;AAYD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line standard/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"]},"metadata":{},"sourceType":"script"}