{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Keyboard = _interopRequireDefault(require(\"react-native-web/dist/exports/Keyboard\"));\n\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\n\nvar _Dimensions = _interopRequireDefault(require(\"react-native-web/dist/exports/Dimensions\"));\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jsxFileName = \"/Users/rithikpothuganti/Telescope-app/Telescope/node_modules/react-native-spacer/src/spacer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar windowHeight = _Dimensions.default.get('window').height;\n\nvar showListenerEvent = _Platform.default.OS === 'android' ? 'keyboardDidShow' : 'keyboardWillShow';\nvar hideListenerEvent = _Platform.default.OS === 'android' ? 'keyboardDidHide' : 'keyboardWillHide';\n\nvar Spacer = function (_React$PureComponent) {\n  (0, _inherits2.default)(Spacer, _React$PureComponent);\n\n  var _super = _createSuper(Spacer);\n\n  function Spacer() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Spacer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._topValue = new _Animated.default.Value(0);\n    _this._viewHeight = 0;\n    _this._locationY = 0;\n    _this._toValue = 0;\n\n    _this._keyboardWillHide = function () {\n      if (_this.props.enabled && _this._isActive) {\n        _this._isActive = false;\n\n        _this._animate(0, _this.props.animationDuration).start();\n      }\n    };\n\n    _this._keyboardWillShow = function (ev) {\n      if (_this.props.enabled && !_this._isActive) {\n        _this._isActive = true;\n\n        if (_this._container) {\n          _this._getContainer().measureInWindow(function (x, y, w, h) {\n            var toValue = y + h - (windowHeight - (ev.endCoordinates.height + _this._spaceMargin));\n\n            _this._animate(-1 * toValue, _this.props.animationDuration).start();\n          });\n        } else {\n          var toValue = _this._locationY + _this._viewHeight - (windowHeight - (ev.endCoordinates.height + _this._spaceMargin));\n\n          _this._animate(-1 * toValue, _this.props.animationDuration).start();\n        }\n      }\n    };\n\n    _this._animate = function (toValue, duration) {\n      return _Animated.default.timing(_this._topValue, {\n        toValue: toValue,\n        duration: duration,\n        useNativeDriver: false\n      });\n    };\n\n    _this._setLayoutProps = function (ev) {\n      _this._viewHeight = ev.nativeEvent.layout.height;\n\n      if (y = ev.nativeEvent.layout.y) {\n        _this._locationY = y;\n      } else {\n        _this._getContainer().measureInWindow(function (x, y, width, height) {\n          _this._locationY = y;\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Spacer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _Keyboard.default.addListener(showListenerEvent, this._keyboardWillShow);\n\n      _Keyboard.default.addListener(hideListenerEvent, this._keyboardWillHide);\n\n      this._spaceMargin = this.props.spaceMargin;\n      this._isActive = false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _Keyboard.default.removeListener(showListenerEvent, this._keyboardWillShow);\n\n      _Keyboard.default.removeListener(hideListenerEvent, this._keyboardWillHide);\n    }\n  }, {\n    key: \"_getContainer\",\n    value: function _getContainer() {\n      return this._container.measureInWindow ? this._container : this._container.getNode();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          ref = _this$props.ref,\n          children = _this$props.children,\n          backgroundColor = _this$props.backgroundColor,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"style\", \"ref\", \"children\", \"backgroundColor\"]);\n      return _react.default.createElement(_Animated.default.View, (0, _extends2.default)({\n        ref: function ref(_ref) {\n          return _this2._container = _ref;\n        },\n        onLayout: this._setLayoutProps,\n        style: [style, {\n          transform: [{\n            translateY: this._topValue\n          }],\n          backgroundColor: backgroundColor\n        }],\n        collapsable: false\n      }, rest, {\n        __self: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }\n      }), children);\n    }\n  }]);\n  return Spacer;\n}(_react.default.PureComponent);\n\nexports.default = Spacer;\nSpacer.propsTypes = {\n  spaceMargin: _propTypes.default.number,\n  enabled: _propTypes.default.bool,\n  backgroundColor: _propTypes.default.string,\n  animationDuration: _propTypes.default.number\n};\nSpacer.defaultProps = {\n  spaceMargin: 0,\n  enabled: true,\n  backgroundColor: '#fffffff7',\n  animationDuration: 300\n};","map":{"version":3,"sources":["/Users/rithikpothuganti/Telescope-app/Telescope/node_modules/react-native-spacer/src/spacer.js"],"names":["windowHeight","Dimensions","get","height","showListenerEvent","Platform","OS","hideListenerEvent","Spacer","_topValue","Animated","Value","_viewHeight","_locationY","_toValue","_keyboardWillHide","props","enabled","_isActive","_animate","animationDuration","start","_keyboardWillShow","ev","_container","_getContainer","measureInWindow","x","y","w","h","toValue","endCoordinates","_spaceMargin","duration","timing","useNativeDriver","_setLayoutProps","nativeEvent","layout","width","Keyboard","addListener","spaceMargin","removeListener","getNode","style","ref","children","backgroundColor","rest","transform","translateY","React","PureComponent","propsTypes","PropTypes","number","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Keyboard, Animated, Dimensions, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * react-native-spacer https://snack.expo.io/@hieunc/react-native-spacer\n * - Spacer is used to dynamically positioning its child component when keyboard is toggled.\n *   Technically, the view position will be calculate and update (positioning translateY property)\n *   while keyboard appear/disappear\n * - Usage\n  <Spacer spaceMargin={4}>\n    <ChildComponent ... />\n  </Spacer>\n */\nconst windowHeight = Dimensions.get('window').height;\nconst showListenerEvent =\n    Platform.OS === 'android' ? 'keyboardDidShow' : 'keyboardWillShow';\nconst hideListenerEvent =\n    Platform.OS === 'android' ? 'keyboardDidHide' : 'keyboardWillHide';\n\nexport default class Spacer extends React.PureComponent {\n    _topValue = new Animated.Value(0);\n    _viewHeight = 0;\n    _locationY = 0;\n    _toValue = 0;\n\n    componentDidMount() {\n\n        Keyboard.addListener(showListenerEvent, this._keyboardWillShow);\n        Keyboard.addListener(hideListenerEvent, this._keyboardWillHide);\n\n        this._spaceMargin = this.props.spaceMargin;\n        this._isActive = false\n    }\n\n    componentWillUnmount() {\n        Keyboard.removeListener(showListenerEvent, this._keyboardWillShow);\n        Keyboard.removeListener(hideListenerEvent, this._keyboardWillHide);\n    }\n\n    _getContainer() {\n      // calling getNode on the ref is no longer necessary in the future\n      // https://github.com/react-navigation/react-native-safe-area-view/issues/111\n      return this._container.measureInWindow\n          ? this._container\n          : this._container.getNode();\n    }\n\n    _keyboardWillHide = () => {\n        if (this.props.enabled && this._isActive) {\n            this._isActive = false;\n            // Move view back to the initiated position\n            this._animate(0, this.props.animationDuration).start();\n        }\n    };\n\n    _keyboardWillShow = (ev) => {\n\n        if (this.props.enabled && !this._isActive) {\n            this._isActive = true;\n\n            // In some cases, this._container return null\n            // This step make sure this._container is not null in order to use measureInWindow\n            if (this._container) {\n                this._getContainer().measureInWindow((x, y, w, h) => {\n                    // Calculation new position above the keyboard\n                    let toValue = (y + h) - (windowHeight - (ev.endCoordinates.height + this._spaceMargin));\n                    this._animate(-1 * toValue, this.props.animationDuration).start();\n                })\n            } else {\n                // Calculation new position above the keyboard\n                let toValue = (this._locationY + this._viewHeight) - (windowHeight - (ev.endCoordinates.height + this._spaceMargin));\n                this._animate(-1 * toValue, this.props.animationDuration).start();\n            }\n        }\n    };\n\n    _animate = (toValue, duration) => {\n\n        // Short hand for animating view\n        return Animated.timing(this._topValue, {\n            toValue,\n            duration,\n            useNativeDriver: false\n        });\n    };\n\n\n    _setLayoutProps = ev => {\n\n        // View height, sometimes it return 0\n        this._viewHeight = ev.nativeEvent.layout.height;\n\n        // Cordinator y of view\n        if (y = ev.nativeEvent.layout.y) {\n            this._locationY = y\n        } else {\n            this._getContainer()\n                .measureInWindow((x, y, width, height) => {\n                    this._locationY = y;\n                })\n        }\n    };\n\n    render() {\n        let { style, ref, children, backgroundColor, ...rest } = this.props;\n\n        return <Animated.View\n            ref={ref => this._container = ref}\n            onLayout={this._setLayoutProps}\n            style={[style, {\n                transform: [{ translateY: this._topValue }],\n                backgroundColor\n            }]}\n            collapsable={false}\n            {...rest}\n        >{children}</Animated.View>;\n    }\n}\n\nSpacer.propsTypes = {\n    // A distance of component above the keyboard when it has shown\n    spaceMargin: PropTypes.number,\n    enabled: PropTypes.bool,\n    backgroundColor: PropTypes.string,\n    animationDuration: PropTypes.number\n}\n\nSpacer.defaultProps = {\n    spaceMargin: 0,\n    enabled: true,\n    backgroundColor: '#fffffff7',\n    animationDuration: 300\n}\n"]},"metadata":{},"sourceType":"script"}