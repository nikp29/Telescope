{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TabBarIcon = function (_React$Component) {\n  (0, _inherits2.default)(TabBarIcon, _React$Component);\n\n  var _super = _createSuper(TabBarIcon);\n\n  function TabBarIcon() {\n    (0, _classCallCheck2.default)(this, TabBarIcon);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(TabBarIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          activeOpacity = _this$props.activeOpacity,\n          inactiveOpacity = _this$props.inactiveOpacity,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          renderIcon = _this$props.renderIcon,\n          horizontal = _this$props.horizontal,\n          style = _this$props.style;\n      return React.createElement(_View.default, {\n        style: style\n      }, React.createElement(_reactNativeReanimated.default.View, {\n        style: [styles.icon, {\n          opacity: activeOpacity\n        }]\n      }, renderIcon({\n        route: route,\n        focused: true,\n        horizontal: horizontal,\n        tintColor: activeTintColor\n      })), React.createElement(_reactNativeReanimated.default.View, {\n        style: [styles.icon, {\n          opacity: inactiveOpacity\n        }]\n      }, renderIcon({\n        route: route,\n        focused: false,\n        horizontal: horizontal,\n        tintColor: inactiveTintColor\n      })));\n    }\n  }]);\n  return TabBarIcon;\n}(React.Component);\n\nexports.default = TabBarIcon;\n\nvar styles = _StyleSheet.default.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","render","style","styles","opacity","activeOpacity","renderIcon","route","focused","horizontal","tintColor","activeTintColor","inactiveOpacity","inactiveTintColor","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;;;;IAmBe,U;;;;;;;;;;;;WACbC,kBAAS;AAAA,wBAUH,KAVG,KAAA;AAAA,UACD,KADC,eACD,KADC;AAAA,UACD,aADC,eACD,aADC;AAAA,UACD,eADC,eACD,eADC;AAAA,UACD,eADC,eACD,eADC;AAAA,UACD,iBADC,eACD,iBADC;AAAA,UACD,UADC,eACD,UADC;AAAA,UACD,UADC,eACD,UADC;AAAA,UASLC,KATK,eASLA,KATK;AAcP,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAM,QAAA,KAAK,EAAEA;AAAb,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,+BAAA,IAAA,EAAA;AAAe,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,UAAAA,OAAO,EAAEC;AAAX,SAAd;AAAtB,OAAA,EACGC,UAAU,CAAC;AACVC,QAAAA,KADU,EACVA,KADU;AAEVC,QAAAA,OAAO,EAFG,IAAA;AAGVC,QAAAA,UAHU,EAGVA,UAHU;AAIVC,QAAAA,SAAS,EAAEC;AAJD,OAAD,CADb,CADF,EASE,KAAA,CAAA,aAAA,CAAA,+BAAA,IAAA,EAAA;AAAe,QAAA,KAAK,EAAE,CAACR,MAAM,CAAP,IAAA,EAAc;AAAEC,UAAAA,OAAO,EAAEQ;AAAX,SAAd;AAAtB,OAAA,EACGN,UAAU,CAAC;AACVC,QAAAA,KADU,EACVA,KADU;AAEVC,QAAAA,OAAO,EAFG,KAAA;AAGVC,QAAAA,UAHU,EAGVA,UAHU;AAIVC,QAAAA,SAAS,EAAEG;AAJD,OAAD,CADb,CATF,CADF;AAoBD;;;EAnCqCb,KAAK,CAA9B,S;;;;AAsCf,IAAMG,MAAM,GAAG,oBAAA,MAAA,CAAkB;AAC/BW,EAAAA,IAAI,EAAE;AAIJC,IAAAA,QAAQ,EAJJ,UAAA;AAKJC,IAAAA,SAAS,EALL,QAAA;AAMJC,IAAAA,UAAU,EANN,QAAA;AAOJC,IAAAA,cAAc,EAPV,QAAA;AAQJC,IAAAA,MAAM,EARF,MAAA;AASJC,IAAAA,KAAK,EATD,MAAA;AAWJC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}